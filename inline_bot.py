from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

import os
from dotenv import load_dotenv
# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()
# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv('BOT_TOKEN')

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

def get_pizza_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üçï –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞", callback_data="pizza_margarita")],
        [InlineKeyboardButton(text="üçï –ü–µ–ø–ø–µ—Ä–æ–Ω–∏", callback_data="pizza_pepperoni")],
        [InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm")]
    ])

@dp.message(Command("pizza"))
async def pizza_command(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ø–∏—Ü—Ü—É:", reply_markup=get_pizza_keyboard())

selected_pizza = None

@dp.callback_query()
async def handle_pizza_selection(callback: types.CallbackQuery):
    global selected_pizza

    if callback.data.startswith("pizza_"):
        selected_pizza = callback.data.split('_')[1]
        await callback.answer(f"–í—ã–±—Ä–∞–Ω–∞: {selected_pizza}")
    elif callback.data == "confirm":
        if selected_pizza:
            await callback.message.edit_text(
                f"‚úÖ –ó–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω: {selected_pizza}",
                reply_markup=None
            )
            await callback.answer("–ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç!")
        else:
            await callback.answer("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–∏—Ü—Ü—É!", show_alert=True)

if __name__ == "__main__":
    dp.run_polling(bot)